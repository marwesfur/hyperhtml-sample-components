{"version":3,"sources":["webpack:///webpack/bootstrap c4bafd8c390d4ccb7a2f","webpack:///./~/hyperhtml/esm/shared/constants.js","webpack:///./~/hyperhtml/esm/shared/easy-dom.js","webpack:///./~/hyperhtml/esm/shared/poorlyfills.js","webpack:///./~/hyperhtml/esm/shared/utils.js","webpack:///./~/hyperhtml-element/esm/index.js","webpack:///./~/hyperhtml/esm/classes/Component.js","webpack:///./~/hyperhtml/esm/classes/Wire.js","webpack:///./~/hyperhtml/esm/hyper/render.js","webpack:///./~/hyperhtml/esm/objects/Intent.js","webpack:///./~/hyperhtml/esm/shared/domdiff.js","webpack:///./~/hyperhtml/esm/shared/re.js","webpack:///./src/index.js","webpack:///./~/hyperhtml/esm.js","webpack:///./~/hyperhtml/esm/hyper/wire.js","webpack:///./~/hyperhtml/esm/index.js","webpack:///./~/hyperhtml/esm/objects/Path.js","webpack:///./~/hyperhtml/esm/objects/Style.js","webpack:///./~/hyperhtml/esm/objects/Updates.js","webpack:///./~/hyperhtml/esm/shared/features-detection.js","webpack:///./src/components/address-element.js","webpack:///./src/components/buttons.js","webpack:///./src/components/slider.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA,2DAAkE;AAAA;AAAA;AAClE;AAAA;AAAA;;;;;;;;AC1BA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;ACJe;;AAEf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB,EAAE;AACjC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA,cAAc,mBAAmB,EAAE;AACnC,cAAc,6BAA6B;AAC3C;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,IAAI;AAAA;AAAA;;AAEJ;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;ACjE6B;;AAS5B;;AAOA;;AAE6B;;AAET;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,UAAU,EAAE,cAAc,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpMA;AAAA;;AAE6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kCAAkC;AAC/D;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,gBAAgB;AAC9B,iBAAiB,eAAe,iBAAiB,IAAI;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,sBAAsB,8CAA8C;AACpE,oBAAoB,6BAA6B,KAAK,IAAI;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA,gCAAgC,cAAc;AAC9C;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,iCAAiC;AACrE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB,WAAW;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,iCAAiC;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA,GAAG;AACH;AACA,uCAAuC,8BAA8B;AACrE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM,iCAAiC;AACvC;AACA;AACA;AACA;;;;;;;;;;;AC7VuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,0BAA0B,EAAE;AAC1E;AACA,qBAAqB,OAAO,WAAW,GAAG;AAC1C;AACA;AACA,iBAAiB;AACjB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;;;;;;;;;;ACvJiB;AACO;;AAExB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9BqB;AACU;AAC/B;AAMC;;AAEmB;;AAEpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9EA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,qDAAqD,IAAI;AACzD;AACA;AACA;AACA,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AChKA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEQ;;;;;;;;;;;;ACnBR;;AAEA;AACA;AACA;;;;;;;;ACJA,4DAA4D,aAAa,kQAAkQ,mCAAmC,IAAI,eAAe,SAAS,cAAc,oCAAoC,+BAA+B,0BAA0B,cAAc,OAAO,gBAAgB,uBAAuB,mBAAmB,mBAAmB,6BAA6B,YAAY,OAAO,gBAAgB,YAAY,mBAAmB,2BAA2B,wBAAwB,IAAI,yBAAyB,YAAY,OAAO,gBAAgB,YAAY,iBAAiB,sBAAsB,uBAAuB,sBAAsB,mCAAmC,uBAAuB,sCAAsC,aAAa,YAAY,oBAAoB,gBAAgB,OAAO,eAAe,yCAAyC,iBAAiB,cAAc,mBAAmB,kCAAkC,sDAAsD,wCAAwC,GAAG,KAAK,KAAK,KAAK,gCAAgC,kCAAkC,uDAAuD,sBAAsB,YAAY,IAAI,KAAK,WAAW,qCAAqC,iBAAiB,6BAA6B,eAAe,0BAA0B,eAAe,qCAAqC,iBAAiB,8BAA8B,wSAAwS,+CAA+C,wFAAwF,oBAAoB,eAAe,uBAAuB,IAAI,wBAAwB,mEAAmE,6BAA6B,mBAAmB,6BAA6B,iBAAiB,sCAAsC,iBAAiB,0DAA0D,IAAI,2BAA2B,SAAS,aAAa,uBAAuB,mBAAmB,0BAA0B,eAAe,YAAY,0BAA0B,YAAY,eAAe,wEAAwE,wCAAwC,SAAS,cAAc,sBAAsB,uBAAuB,mBAAmB,UAAU,YAAY,mBAAmB,sBAAsB,+BAA+B,eAAe,6BAA6B,kEAAkE,gBAAgB,sEAAsE,6CAA6C,SAAS,oBAAoB,2CAA2C,iDAAiD,eAAe,wBAAwB,4FAA4F,eAAe,kFAAkF,+BAA+B,oBAAoB,8BAA8B,gCAAgC,6BAA6B,+CAA+C,KAAK,yBAAyB,yEAAyE,UAAU,uBAAuB,0CAA0C,oBAAoB,OAAO,sCAAsC,kBAAkB,mBAAmB,mBAAmB,MAAM,gCAAgC,MAAM,yBAAyB,QAAQ,eAAe,cAAc,SAAS,KAAK,kBAAkB,uBAAuB,IAAI,yBAAyB,SAAS,8EAA8E,sBAAsB,mBAAmB,iBAAiB,mBAAmB,iBAAiB,8CAA8C,+BAA+B,UAAU,GAAG,gBAAgB,WAAW,6CAA6C,iCAAiC,MAAM,iEAAiE,2CAA2C,6BAA6B,gBAAgB,SAAS,kDAAkD,GAAG,kBAAkB,kBAAkB,YAAY,gBAAgB,SAAS,sBAAsB,kCAAkC,KAAK,oCAAoC,qEAAqE,sBAAsB,QAAQ,EAAE,uIAAuI,WAAW,qBAAqB,yBAAyB,yBAAyB,yBAAyB,iCAAiC,iCAAiC,4EAA4E,+DAA+D,KAAK,mBAAmB,8CAA8C,KAAK,gBAAgB,wBAAwB,SAAS,2EAA2E,KAAK,WAAW,mDAAmD,sBAAsB,gCAAgC,qCAAqC,KAAK,mDAAmD,KAAK,4BAA4B,qBAAqB,uEAAuE,SAAS,UAAU,eAAe,iCAAiC,mBAAmB,OAAO,QAAQ,oBAAoB,6GAA6G,oBAAoB,gEAAgE,IAAI,KAAK,WAAW,gBAAgB,aAAa,cAAc,8DAA8D,wDAAwD,WAAW,uBAAuB,IAAI,KAAK,WAAW,2EAA2E,iBAAiB,wBAAwB,wCAAwC,WAAW,2CAA2C,4DAA4D,kBAAkB,6MAA6M,gBAAgB,2BAA2B,kBAAkB,OAAO,iBAAiB,eAAe,qBAAqB,iBAAiB,qHAAqH,MAAM,yCAAyC,+BAA+B,MAAM,6EAA6E,yBAAyB,2CAA2C,OAAO,EAAE,MAAM,4DAA4D,uBAAuB,MAAM,iCAAiC,kVAAkV,OAAO,oBAAoB,sBAAsB,sCAAsC,MAAM,sBAAsB,gDAAgD,qBAAqB,QAAQ,kBAAkB,iBAAiB,2CAA2C,oBAAoB,kCAAkC,IAAI,KAAK,WAAW,wBAAwB,mBAAmB,8BAA8B,kCAAkC,2CAA2C,IAAI,oCAAoC,SAAS,mBAAmB,IAAI,eAAe,IAAI,iCAAiC,uBAAuB,IAAI,KAAK,WAAW,uCAAuC,oBAAoB,wBAAwB,EAAE,SAAS,uDAAuD,gBAAgB,6DAA6D,gBAAgB,MAAM,oEAAoE,6EAA6E,6CAA6C,6DAA6D,wCAAwC,uDAAuD,2BAA2B,mBAAmB,gIAAgI,gBAAgB,aAAa,qBAAqB,yOAAyO,KAAK,qBAAqB,4BAA4B,IAAI,KAAK,0BAA0B,eAAe,2BAA2B,MAAM,uCAAuC,MAAM,2CAA2C,SAAS,wBAAwB,sCAAsC,IAAI,KAAK,WAAW,mBAAmB,0BAA0B,MAAM,0FAA0F,MAAM,0FAA0F,OAAO,2BAA2B,IAAI,gCAAgC,iCAAiC,SAAS,SAAS,cAAc,GAAG,eAAe,mBAAmB,sEAAsE,OAAO,6BAA6B,gDAAgD,uBAAuB,OAAO,oBAAoB,qBAAqB,wEAAwE,aAAa,qBAAqB,gEAAgE,4BAA4B,cAAc,+BAA+B,IAAI,4BAA4B,wCAAwC,uCAAuC,yBAAyB,iDAAiD,mBAAmB,OAAO,YAAY,wKAAwK,kBAAkB,qCAAqC,oEAAoE,qBAAqB,gBAAgB,2CAA2C,IAAI,KAAK,WAAW,4DAA4D,mCAAmC,aAAa,eAAe,oMAAoM,0CAA0C,kBAAkB,0DAA0D,6CAA6C,kDAAkD,OAAO,eAAe,oBAAoB,4BAA4B,KAAK,oCAAoC,yBAAyB,8BAA8B,iBAAiB,mDAAmD,mDAAmD,kCAAkC,8BAA8B,oEAAoE,UAAU,uCAAuC,aAAa,kBAAkB,sBAAsB,uEAAuE,8DAA8D,yBAAyB,gBAAgB,eAAe,UAAU,WAAW,oBAAoB,kBAAkB,MAAM,yBAAyB,kCAAkC,EAAE,6EAA6E,UAAU,WAAW,oBAAoB,yDAAyD,yBAAyB,mCAAmC,KAAK;AACn8Z;AACA,OAAc,2CAA2C,a;;;;;;;;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACFrB;AACd;AACL;AACa;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mCAAmC,UAAU,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;AC/FA;AAAA;;AAEyB;AACzB;AAC8B;AAC9B;AACA;;AAEA;AACA;AACA,UAAU,WAAW;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CC;;AAED;AACA;AACA,YAAY,YAAY,QAAQ,UAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,yCAAyC;AAC3E;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;;;;;;;ACxDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,E;;;;;;;;;;;;;;;;;AChEC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC5B;AACyB;AACK;;AAE7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,KAAK;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA,KAAK,sBAAsB,+BAA+B;AAC1D,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;AC5gB+B;;AAE/B;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;ACnBA;;AAEA;;AAEA;;AAEA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA,mCAAmC,gBAAgB;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD,uBAAuB,wBAAwB;AAC/C,gCAAgC,iBAAiB;AACjD;;;AAGA;AACA,sBAAsB,0BAA0B;AAChD,oBAAoB,wBAAwB;AAC5C;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;;AAEA,oC;;;;;;;;AC3DA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,KAAK;AACxC;;AAEA;AACA;AACA,4FAA2C,MAAM,oCAAoC,iCAAiC;;AAEtH;AACA,SAAS;;AAET,qBAAqB,QAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB,IAAI,0BAA0B;AACzF;;AAEA;AACA;AACA;AACA;;;;;AAKA;AACA;;;;;;;;;AClEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,2BAA2B,eAAe;;AAE1C;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE,6CAA6C;AACvE,gCAAgC,2BAA2B;AAC3D;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,SAAS;AACxB;;AAEA;AACA,gDAAgD,2BAA2B;AAC3E,gDAAgD,2BAA2B;;AAE3E;AACA,kBAAkB,YAAY;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c4bafd8c390d4ccb7a2f","export const G = document.defaultView;\n\n// Node.CONSTANTS\n// 'cause some engine has no global Node defined\n// (i.e. Node, NativeScript, basicHTML ... )\nexport const ELEMENT_NODE = 1;\nexport const ATTRIBUTE_NODE = 2;\nexport const TEXT_NODE = 3;\nexport const COMMENT_NODE = 8;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n\n// HTML related constants\nexport const VOID_ELEMENTS = /^area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr$/i;\n\n// SVG related constants\nexport const OWNER_SVG_ELEMENT = 'ownerSVGElement';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\n// Custom Elements / MutationObserver constants\nexport const CONNECTED = 'connected';\nexport const DISCONNECTED = 'dis' + CONNECTED;\n\n// hyperHTML related constants\nexport const EXPANDO = '_hyper: ';\nexport const SHOULD_USE_TEXT_CONTENT = /^style|textarea$/i;\nexport const UID = EXPANDO + ((Math.random() * new Date) | 0) + ';';\nexport const UIDC = '<!--' + UID + '-->';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/shared/constants.js\n// module id = 0\n// module chunks = 0","// these are tiny helpers to simplify most common operations needed here\nexport const create = (node, type) => doc(node).createElement(type);\nexport const doc = node => node.ownerDocument || node;\nexport const fragment = node => doc(node).createDocumentFragment();\nexport const text = (node, text) => doc(node).createTextNode(text);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/shared/easy-dom.js\n// module id = 1\n// module chunks = 0","import {G, UID} from './constants.js';\n\n// you know that kind of basics you need to cover\n// your use case only but you don't want to bloat the library?\n// There's even a package in here:\n// https://www.npmjs.com/package/poorlyfills\n\n// used to dispatch simple events\nlet Event = G.Event;\ntry {\n  new Event('Event');\n} catch(o_O) {\n  Event = function (type) {\n    const e = document.createEvent('Event');\n    e.initEvent(type, false, false);\n    return e;\n  };\n}\nexport {Event};\n\n// used to store template literals\n/* istanbul ignore next */\nexport const Map = G.Map || function Map() {\n  const keys = [], values = [];\n  return {\n    get(obj) {\n      return values[keys.indexOf(obj)];\n    },\n    set(obj, value) {\n      values[keys.push(obj) - 1] = value;\n    }\n  };\n};\n\n// used to store wired content\nlet ID = 0;\nexport const WeakMap = G.WeakMap || function WeakMap() {\n  const key = UID + ID++;\n  return {\n    get(obj) { return obj[key]; },\n    set(obj, value) {\n      Object.defineProperty(obj, key, {\n        configurable: true,\n        value\n      });\n    }\n  };\n};\n\n// used to store hyper.Components\nexport const WeakSet = G.WeakSet || function WeakSet() {\n  const wm = new WeakMap;\n  return {\n    add(obj) { wm.set(obj, true); },\n    has(obj) { return wm.get(obj) === true; }\n  };\n};\n\n// used to be sure IE9 or older Androids work as expected\nexport const isArray = Array.isArray || (toString =>\n  arr => toString.call(arr) === '[object Array]'\n)({}.toString);\n\nexport const trim = UID.trim || function () {\n  return this.replace(/^\\s+|\\s+$/g, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/shared/poorlyfills.js\n// module id = 2\n// module chunks = 0","import {attrName, attrSeeker} from './re.js';\n\nimport {\n  G,\n  ELEMENT_NODE,\n  OWNER_SVG_ELEMENT,\n  SVG_NAMESPACE,\n  UID,\n  UIDC\n} from './constants.js';\n\nimport {\n  hasAppend,\n  hasContent,\n  hasDoomedCloneNode,\n  hasImportNode\n} from './features-detection.js';\n\nimport {create, doc, fragment} from './easy-dom.js';\n\nimport {Map, WeakMap} from './poorlyfills.js';\n\n// appends an array of nodes\n// to a generic node/fragment\n// When available, uses append passing all arguments at once\n// hoping that's somehow faster, even if append has more checks on type\nexport const append = hasAppend ?\n  (node, childNodes) => {\n    node.append.apply(node, childNodes);\n  } :\n  (node, childNodes) => {\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      node.appendChild(childNodes[i]);\n    }\n  };\n\nconst findAttributes = new RegExp('(' + attrName + '=)([\\'\"]?)' + UIDC + '\\\\2', 'gi');\nconst comments = ($0, $1, $2, $3) =>\n  '<' + $1 + $2.replace(findAttributes, replaceAttributes) + $3;\nconst replaceAttributes = ($0, $1, $2) => $1 + ($2 || '\"') + UID + ($2 || '\"');\n\n// given a node and a generic HTML content,\n// create either an SVG or an HTML fragment\n// where such content will be injected\nexport const createFragment = (node, html) =>\n  (OWNER_SVG_ELEMENT in node ?\n    SVGFragment :\n    HTMLFragment\n  )(node, html.replace(attrSeeker, comments));\n\n// IE/Edge shenanigans proof cloneNode\n// it goes through all nodes manually\n// instead of relying the engine to suddenly\n// merge nodes together\nconst cloneNode = hasDoomedCloneNode ?\n  node => {\n    const clone = node.cloneNode();\n    const childNodes = node.childNodes ||\n                      // this is an excess of caution\n                      // but some node, in IE, might not\n                      // have childNodes property.\n                      // The following fallback ensure working code\n                      // in older IE without compromising performance\n                      // or any other browser/engine involved.\n                      /* istanbul ignore next */\n                      [];\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      clone.appendChild(cloneNode(childNodes[i]));\n    }\n    return clone;\n  } :\n  // the following ignore is due code-coverage\n  // combination of not having document.importNode\n  // but having a working node.cloneNode.\n  // This shenario is common on older Android/WebKit browsers\n  // but basicHTML here tests just two major cases:\n  // with document.importNode or with broken cloneNode.\n  /* istanbul ignore next */\n  node => node.cloneNode(true);\n\n// IE and Edge do not support children in SVG nodes\n/* istanbul ignore next */\nexport const getChildren = node => {\n  const children = [];\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  for (let i = 0; i < length; i++) {\n    if (childNodes[i].nodeType === ELEMENT_NODE)\n      children.push(childNodes[i]);\n  }\n  return children;\n};\n\n// used to import html into fragments\nexport const importNode = hasImportNode ?\n  (doc, node) => doc.importNode(node, true) :\n  (doc, node) => cloneNode(node)\n\n// just recycling a one-off array to use slice\n// in every needed place\nexport const slice = [].slice;\n\n// lazy evaluated, returns the unique identity\n// of a template literal, as tempalte literal itself.\n// By default, ES2015 template literals are unique\n// tag`a${1}z` === tag`a${2}z`\n// even if interpolated values are different\n// the template chunks are in a frozen Array\n// that is identical each time you use the same\n// literal to represent same static content\n// around its own interpolations.\nexport const unique = template => TL(template);\n\n// TL returns a unique version of the template\n// it needs lazy feature detection\n// (cannot trust literals with transpiled code)\nlet TL = t => {\n  if (\n    // TypeScript template literals are not standard\n    t.propertyIsEnumerable('raw') ||\n    (\n        // Firefox < 55 has not standard implementation neither\n        /Firefox\\/(\\d+)/.test((G.navigator || {}).userAgent) &&\n          parseFloat(RegExp.$1) < 55\n        )\n  ) {\n    const T = {};\n    TL = t => {\n      const k = '^' + t.join('^');\n      return T[k] || (T[k] = t);\n    };\n  } else {\n    // make TL an identity like function\n    TL = t => t;\n  }\n  return TL(t);\n};\n\n// used to store templates objects\n// since neither Map nor WeakMap are safe\nexport const TemplateMap = () => {\n  try {\n    const wm = new WeakMap;\n    const o_O = Object.freeze([]);\n    wm.set(o_O, true);\n    if (!wm.get(o_O))\n      throw o_O;\n    return wm;\n  } catch(o_O) {\n    // inevitable legacy code leaks due\n    // https://github.com/tc39/ecma262/pull/890\n    return new Map;\n  }\n};\n\n// create document fragments via native template\n// with a fallback for browsers that won't be able\n// to deal with some injected element such <td> or others\nconst HTMLFragment = hasContent ?\n  (node, html) => {\n    const container = create(node, 'template');\n    container.innerHTML = html;\n    return container.content;\n  } :\n  (node, html) => {\n    const container = create(node, 'template');\n    const content = fragment(node);\n    if (/^[^\\S]*?<(col(?:group)?|t(?:head|body|foot|r|d|h))/i.test(html)) {\n      const selector = RegExp.$1;\n      container.innerHTML = '<table>' + html + '</table>';\n      append(content, slice.call(container.querySelectorAll(selector)));\n    } else {\n      container.innerHTML = html;\n      append(content, slice.call(container.childNodes));\n    }\n    return content;\n  };\n\n// creates SVG fragment with a fallback for IE that needs SVG\n// within the HTML content\nconst SVGFragment = hasContent ?\n  (node, html) => {\n    const content = fragment(node);\n    const container = doc(node).createElementNS(SVG_NAMESPACE, 'svg');\n    container.innerHTML = html;\n    append(content, slice.call(container.childNodes));\n    return content;\n  } :\n  (node, html) => {\n    const content = fragment(node);\n    const container = create(node, 'div');\n    container.innerHTML = '<svg xmlns=\"' + SVG_NAMESPACE + '\">' + html + '</svg>';\n    append(content, slice.call(container.firstChild.childNodes));\n    return content;\n  };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/shared/utils.js\n// module id = 3\n// module chunks = 0","/*! (C) 2017-2018 Andrea Giammarchi - ISC Style License */\n\nimport {Component, bind, define, hyper, wire} from 'hyperhtml/esm';\n\n// utils to deal with custom elements builtin extends\nconst O = Object;\nconst classes = [];\nconst defineProperties = O.defineProperties;\nconst defineProperty = O.defineProperty;\nconst getOwnPropertyDescriptor = O.getOwnPropertyDescriptor;\nconst getOwnPropertyNames = O.getOwnPropertyNames;\nconst getOwnPropertySymbols = O.getOwnPropertySymbols || (() => []);\nconst getPrototypeOf = O.getPrototypeOf || (o => o.__proto__);\nconst ownKeys = typeof Reflect === 'object' && Reflect.ownKeys ||\n                (o => getOwnPropertyNames(o).concat(getOwnPropertySymbols(o)));\nconst setPrototypeOf = O.setPrototypeOf ||\n                      ((o, p) => (o.__proto__ = p, o));\n\nclass HyperHTMLElement extends HTMLElement {\n\n  // define a custom-element in the CustomElementsRegistry\n  // class MyEl extends HyperHTMLElement {}\n  // MyEl.define('my-el');\n  static define(name, options) {\n    const Class = this;\n    const proto = Class.prototype;\n\n    // if observedAttributes contains attributes to observe\n    // HyperHTMLElement will directly reflect get/setAttribute\n    // operation once these attributes are used, example:\n    // el.observed = 123;\n    // will automatically do\n    // el.setAttribute('observed', 123);\n    // triggering also the attributeChangedCallback\n    (Class.observedAttributes || []).forEach(name => {\n      if (!(name in proto)) defineProperty(\n        proto,\n        name.replace(/-([a-z])/g, ($0, $1) => $1.toUpperCase()),\n        {\n          configurable: true,\n          // it's impossible to understand if this property\n          // should be returned as boolean or not\n          // but you can always define\n          // get propName() { return !!this.getAttribute(name); }\n          // overwriting the default behavior\n          get() {\n            const value = this.getAttribute(name);\n            return value === '' ? true : value;\n          },\n          set(value) {\n            if (value === false || value == null)\n              this.removeAttribute(name, value);\n            else {\n              this.setAttribute(name, value);\n            }\n          }\n        }\n      );\n    });\n\n    const onChanged = proto.attributeChangedCallback;\n    const hasChange = !!onChanged;\n\n    // created() {} is an initializer method that grants\n    // the node is fully known to the browser.\n    // It is ensured to run either after DOMContentLoaded,\n    // or once there is a next sibling (stream-friendly) so that\n    // you have full access to element attributes and/or childNodes.\n    const created = proto.created;\n    if (created) {\n      // used to ensure create() is called once and once only\n      defineProperty(\n        proto,\n        '_init$',\n        {\n          configurable: true,\n          writable: true,\n          value: true\n        }\n      );\n\n      // ⚠️ if you need to overwrite/change attributeChangedCallback method\n      //    at runtime after class definition, be sure you do so\n      //    via Object.defineProperty to preserve its non-enumerable nature.\n      defineProperty(\n        proto,\n        'attributeChangedCallback',\n        {\n          configurable: true,\n          value: function aCC(name, prev, curr) {\n            if (this._init$) {\n              checkReady.call(this, created);\n              if (this._init$)\n                return this._init$$.push(aCC.bind(this, name, prev, curr));\n            }\n            // ensure setting same value twice\n            // won't trigger twice attributeChangedCallback\n            if (hasChange && prev !== curr) {\n              onChanged.apply(this, arguments);\n            }\n          }\n        }\n      );\n\n      // ⚠️ if you need to overwrite/change connectedCallback method\n      //    at runtime after class definition, be sure you do so\n      //    via Object.defineProperty to preserve its non-enumerable nature.\n      const onConnected = proto.connectedCallback;\n      const hasConnect = !!onConnected;\n      defineProperty(\n        proto,\n        'connectedCallback',\n        {\n          configurable: true,\n          value: function cC() {\n            if (this._init$) {\n              checkReady.call(this, created);\n              if (this._init$)\n                return this._init$$.push(cC.bind(this));\n            }\n            if (hasConnect) {\n              onConnected.apply(this, arguments);\n            }\n          }\n        }\n      );\n    } else if (hasChange) {\n      // ⚠️ if you need to overwrite/change attributeChangedCallback method\n      //    at runtime after class definition, be sure you do so\n      //    via Object.defineProperty to preserve its non-enumerable nature.\n      defineProperty(\n        proto,\n        'attributeChangedCallback',\n        {\n          configurable: true,\n          value(name, prev, curr) {\n            // ensure setting same value twice\n            // won't trigger twice attributeChangedCallback\n            if (prev !== curr) {\n              onChanged.apply(this, arguments);\n            }\n          }\n        }\n      );\n    }\n\n    // define lazily all handlers\n    // class { handleClick() { ... }\n    // render() { `<a onclick=${this.handleClick}>` } }\n    getOwnPropertyNames(proto).forEach(key => {\n      if (/^handle[A-Z]/.test(key)) {\n        const _key$ = '_' + key + '$';\n        const method = proto[key];\n        defineProperty(proto, key, {\n          configurable: true,\n          get() {\n            return  this[_key$] ||\n                    (this[_key$] = method.bind(this));\n          }\n        });\n      }\n    });\n\n    // whenever you want to directly use the component itself\n    // as EventListener, you can pass it directly.\n    // https://medium.com/@WebReflection/dom-handleevent-a-cross-platform-standard-since-year-2000-5bf17287fd38\n    //  class Reactive extends HyperHTMLElement {\n    //    oninput(e) { console.log(this, 'changed', e.target.value); }\n    //    render() { this.html`<input oninput=\"${this}\">`; }\n    //  }\n    if (!('handleEvent' in proto)) {\n      // ⚠️ if you need to overwrite/change handleEvent method\n      //    at runtime after class definition, be sure you do so\n      //    via Object.defineProperty to preserve its non-enumerable nature.\n      defineProperty(\n        proto,\n        'handleEvent',\n        {\n          configurable: true,\n          value(event) {\n            this[\n              (event.currentTarget.dataset || {}).call ||\n              ('on' + event.type)\n            ](event);\n          }\n        }\n      );\n    }\n\n    if (options && options.extends) {\n      const Native = document.createElement(options.extends).constructor;\n      const Intermediate = class extends Native {};\n      const Super = getPrototypeOf(Class);\n      ownKeys(Super)\n        .filter(key => [\n          'length', 'name', 'arguments', 'caller', 'prototype'\n        ].indexOf(key) < 0)\n        .forEach(key => defineProperty(\n          Intermediate,\n          key,\n          getOwnPropertyDescriptor(Super, key)\n        )\n      );\n      ownKeys(Super.prototype)\n        .forEach(key => defineProperty(\n          Intermediate.prototype,\n          key,\n          getOwnPropertyDescriptor(Super.prototype, key)\n        )\n      );\n      setPrototypeOf(Class, Intermediate);\n      setPrototypeOf(proto, Intermediate.prototype);\n      customElements.define(name, Class, options);\n    } else {\n      customElements.define(name, Class);\n    }\n    classes.push(Class);\n    return Class;\n  }\n\n  // lazily bind once hyperHTML logic\n  // to either the shadowRoot, if present and open,\n  // the _shadowRoot property, if set due closed shadow root,\n  // or the custom-element itself if no Shadow DOM is used.\n  get html() {\n    return this._html$ || (this.html = bind(\n      // in case of Shadow DOM {mode: \"open\"}, use it\n      this.shadowRoot ||\n      // in case of Shadow DOM {mode: \"close\"}, use it\n      // this needs the following reference created upfront\n      // this._shadowRoot = this.attachShadow({mode: \"close\"});\n      this._shadowRoot ||\n      // if no Shadow DOM is used, simply use the component\n      // as container for its own content (it just works too)\n      this\n    ));\n  }\n\n  // it can be set too if necessary, it won't invoke render()\n  set html(value) {\n    defineProperty(this, '_html$', {configurable: true, value: value});\n  }\n\n  // ---------------------//\n  // Basic State Handling //\n  // ---------------------//\n\n  // overwrite this method with your own render\n  render() {}\n\n  // define the default state object\n  // you could use observed properties too\n  get defaultState() { return {}; }\n\n  // the state with a default\n  get state() {\n    return this._state$ || (this.state = this.defaultState);\n  }\n\n  // it can be set too if necessary, it won't invoke render()\n  set state(value) {\n    defineProperty(this, '_state$', {configurable: true, value: value});\n  }\n\n  // currently a state is a shallow copy, like in Preact or other libraries.\n  // after the state is updated, the render() method will be invoked.\n  // ⚠️ do not ever call this.setState() inside this.render()\n  setState(state, render) {\n    const target = this.state;\n    const source = typeof state === 'function' ? state.call(this, target) : state;\n    for (const key in source) target[key] = source[key];\n    if (render !== false) this.render();\n    return this;\n  }\n\n};\n\n// exposing hyperHTML utilities\nHyperHTMLElement.Component = Component;\nHyperHTMLElement.bind = bind;\nHyperHTMLElement.intent = define;\nHyperHTMLElement.wire = wire;\nHyperHTMLElement.hyper = hyper;\n\ntry {\n  if (Symbol.hasInstance) classes.push(\n    defineProperty(HyperHTMLElement, Symbol.hasInstance, {\n      enumerable: false,\n      configurable: true,\n      value(instance) {\n        return classes.some(isPrototypeOf, getPrototypeOf(instance));\n      }\n    }));\n} catch(meh) {}\n\nexport default HyperHTMLElement;\n\n// ------------------------------//\n// DOMContentLoaded VS created() //\n// ------------------------------//\nconst dom = {\n  type: 'DOMContentLoaded',\n  handleEvent() {\n    if (dom.ready()) {\n      document.removeEventListener(dom.type, dom, false);\n      dom.list.splice(0).forEach(invoke);\n    }\n    else\n      setTimeout(dom.handleEvent);\n  },\n  ready() {\n    return document.readyState === 'complete';\n  },\n  list: []\n};\n\nif (!dom.ready()) {\n  document.addEventListener(dom.type, dom, false);\n}\n\nfunction checkReady(created) {\n  if (dom.ready() || isReady.call(this, created)) {\n    if (this._init$) {\n      const list = this._init$$;\n      if (list) delete this._init$$;\n      created.call(defineProperty(this, '_init$', {value: false}));\n      if (list) list.forEach(invoke);\n    }\n  } else {\n    if (!this.hasOwnProperty('_init$$'))\n      defineProperty(this, '_init$$', {configurable: true, value: []});\n    dom.list.push(checkReady.bind(this, created));\n  }\n}\n\nfunction invoke(fn) {\n  fn();\n}\n\nfunction isPrototypeOf(Class) {\n  return this === Class.prototype;\n}\n\nfunction isReady(created) {\n  let el = this;\n  do { if (el.nextSibling) return true; }\n  while (el = el.parentNode);\n  setTimeout(checkReady.bind(this, created));\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml-element/esm/index.js\n// module id = 4\n// module chunks = 0","import { Map, WeakMap } from '../shared/poorlyfills.js';\n\n// hyperHTML.Component is a very basic class\n// able to create Custom Elements like components\n// including the ability to listen to connect/disconnect\n// events via onconnect/ondisconnect attributes\n// Components can be created imperatively or declaratively.\n// The main difference is that declared components\n// will not automatically render on setState(...)\n// to simplify state handling on render.\nexport default function Component() {\n  return this; // this is needed in Edge !!!\n}\n\n// Component is lazily setup because it needs\n// wire mechanism as lazy content\nexport function setup(content) {\n  // there are various weakly referenced variables in here\n  // and mostly are to use Component.for(...) static method.\n  const children = new WeakMap;\n  const create = Object.create;\n  const createEntry = (wm, id, component) => {\n    wm.set(id, component);\n    return component;\n  };\n  const get = (Class, info, context, id) => {\n    const relation = info.get(Class) || relate(Class, info);\n    switch (typeof id) {\n      case 'object':\n      case 'function':\n        const wm = relation.w || (relation.w = new WeakMap);\n        return wm.get(id) || createEntry(wm, id, new Class(context));\n      default:\n        const sm = relation.p || (relation.p = create(null));\n        return sm[id] || (sm[id] = new Class(context));\n    }\n  };\n  const relate = (Class, info) => {\n    const relation = {w: null, p: null};\n    info.set(Class, relation);\n    return relation;\n  };\n  const set = context => {\n    const info = new Map;\n    children.set(context, info);\n    return info;\n  };\n  // The Component Class\n  Object.defineProperties(\n    Component,\n    {\n      // Component.for(context[, id]) is a convenient way\n      // to automatically relate data/context to children components\n      // If not created yet, the new Component(context) is weakly stored\n      // and after that same instance would always be returned.\n      for: {\n        configurable: true,\n        value(context, id) {\n          return get(\n            this,\n            children.get(context) || set(context),\n            context,\n            id == null ?\n              'default' : id\n          );\n        }\n      }\n    }\n  );\n  Object.defineProperties(\n    Component.prototype,\n    {\n      // all events are handled with the component as context\n      handleEvent: {value(e) {\n        const ct = e.currentTarget;\n        this[\n          ('getAttribute' in ct && ct.getAttribute('data-call')) ||\n          ('on' + e.type)\n        ](e);\n      }},\n      // components will lazily define html or svg properties\n      // as soon as these are invoked within the .render() method\n      // Such render() method is not provided by the base class\n      // but it must be available through the Component extend.\n      // Declared components could implement a\n      // render(props) method too and use props as needed.\n      html: lazyGetter('html', content),\n      svg: lazyGetter('svg', content),\n      // the state is a very basic/simple mechanism inspired by Preact\n      state: lazyGetter('state', function () { return this.defaultState; }),\n      // it is possible to define a default state that'd be always an object otherwise\n      defaultState: {get() { return {}; }},\n      // dispatch a bubbling, cancelable, custom event\n      // through the first known/available node\n      dispatch: {value(type, detail) {\n        const {_wire$} = this;\n        if (_wire$) {\n          const event = new CustomEvent(type, {\n            bubbles: true,\n            cancelable: true,\n            detail\n          });\n          event.component = this;\n          return (_wire$.dispatchEvent ?\n                    _wire$ :\n                    _wire$.childNodes[0]\n                  ).dispatchEvent(event);\n        }\n        return false;\n      }},\n      // setting some property state through a new object\n      // or a callback, triggers also automatically a render\n      // unless explicitly specified to not do so (render === false)\n      setState: {value(state, render) {\n        const target = this.state;\n        const source = typeof state === 'function' ? state.call(this, target) : state;\n        for (const key in source) target[key] = source[key];\n        if (render !== false)\n          this.render();\n        return this;\n      }}\n    }\n  );\n}\n\n// instead of a secret key I could've used a WeakMap\n// However, attaching a property directly will result\n// into better performance with thousands of components\n// hanging around, and less memory pressure caused by the WeakMap\nconst lazyGetter = (type, fn) => {\n  const secret = '_' + type + '$';\n  return {\n    get() {\n      return this[secret] || setValue(this, secret, fn.call(this, type));\n    },\n    set(value) {\n      setValue(this, secret, value);\n    }\n  };\n};\n\n// shortcut to set value on get or set(value)\nconst setValue = (self, secret, value) =>\n  Object.defineProperty(self, secret, {\n    configurable: true,\n    value: typeof value === 'function' ?\n      function () {\n        return (self._wire$ = value.apply(this, arguments));\n      } :\n      value\n  })[secret]\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/classes/Component.js\n// module id = 5\n// module chunks = 0","import { append } from '../shared/utils.js';\nimport { doc, fragment } from '../shared/easy-dom.js';\n\nexport default function Wire(childNodes) {\n  this.childNodes = childNodes;\n  this.length = childNodes.length;\n  this.first = childNodes[0];\n  this.last = childNodes[this.length - 1];\n}\n\n// when a wire is inserted, all its nodes will follow\nWire.prototype.insert = function insert() {\n  const df = fragment(this.first);\n  append(df, this.childNodes);\n  return df;\n};\n\n// when a wire is removed, all its nodes must be removed as well\nWire.prototype.remove = function remove() {\n  const first = this.first;\n  const last = this.last;\n  if (this.length === 2) {\n    last.parentNode.removeChild(last);\n  } else {\n    const range = doc(first).createRange();\n    range.setStartBefore(this.childNodes[1]);\n    range.setEndAfter(last);\n    range.deleteContents();\n  }\n  return first;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/classes/Wire.js\n// module id = 6\n// module chunks = 0","import {Map, WeakMap} from '../shared/poorlyfills.js';\nimport {G, UIDC, VOID_ELEMENTS} from '../shared/constants.js';\nimport Updates from '../objects/Updates.js';\nimport {\n  createFragment,\n  importNode,\n  unique,\n  TemplateMap\n} from '../shared/utils.js';\n\nimport {selfClosing} from '../shared/re.js';\n\n// a weak collection of contexts that\n// are already known to hyperHTML\nconst bewitched = new WeakMap;\n\n// all unique template literals\nconst templates = TemplateMap();\n\n// better known as hyper.bind(node), the render is\n// the main tag function in charge of fully upgrading\n// or simply updating, contexts used as hyperHTML targets.\n// The `this` context is either a regular DOM node or a fragment.\nfunction render(template) {\n  const wicked = bewitched.get(this);\n  if (wicked && wicked.template === unique(template)) {\n    update.apply(wicked.updates, arguments);\n  } else {\n    upgrade.apply(this, arguments);\n  }\n  return this;\n}\n\n// an upgrade is in charge of collecting template info,\n// parse it once, if unknown, to map all interpolations\n// as single DOM callbacks, relate such template\n// to the current context, and render it after cleaning the context up\nfunction upgrade(template) {\n  template = unique(template);\n  const info =  templates.get(template) ||\n                createTemplate.call(this, template);\n  const fragment = importNode(this.ownerDocument, info.fragment);\n  const updates = Updates.create(fragment, info.paths);\n  bewitched.set(this, {template, updates});\n  update.apply(updates, arguments);\n  this.textContent = '';\n  this.appendChild(fragment);\n}\n\n// an update simply loops over all mapped DOM operations\nfunction update() {\n  const length = arguments.length;\n  for (let i = 1; i < length; i++) {\n    this[i - 1](arguments[i]);\n  }\n}\n\n// a template can be used to create a document fragment\n// aware of all interpolations and with a list\n// of paths used to find once those nodes that need updates,\n// no matter if these are attributes, text nodes, or regular one\nfunction createTemplate(template) {\n  const paths = [];\n  const html = template.join(UIDC).replace(SC_RE, SC_PLACE);\n  const fragment = createFragment(this, html);\n  Updates.find(fragment, paths, template.slice());\n  const info = {fragment, paths};\n  templates.set(template, info);\n  return info;\n}\n\n// some node could be special though, like a custom element\n// with a self closing tag, which should work through these changes.\nconst SC_RE = selfClosing;\nconst SC_PLACE = ($0, $1, $2) => {\n  return VOID_ELEMENTS.test($1) ? $0 : ('<' + $1 + $2 + '></' + $1 + '>');\n};\n\nexport default render;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/hyper/render.js\n// module id = 7\n// module chunks = 0","const attributes = {};\nconst intents = {};\nconst keys = [];\nconst hasOwnProperty = intents.hasOwnProperty;\n\nlet length = 0;\n\nexport default {\n\n  // used to invoke right away hyper:attributes\n  attributes,\n\n  // hyperHTML.define('intent', (object, update) => {...})\n  // can be used to define a third parts update mechanism\n  // when every other known mechanism failed.\n  // hyper.define('user', info => info.name);\n  // hyper(node)`<p>${{user}}</p>`;\n  define: (intent, callback) => {\n    if (intent.indexOf('-') < 0) {\n      if (!(intent in intents)) {\n        length = keys.push(intent);\n      }\n      intents[intent] = callback;\n    } else {\n      attributes[intent] = callback;\n    }\n  },\n\n  // this method is used internally as last resort\n  // to retrieve a value out of an object\n  invoke: (object, callback) => {\n    for (let i = 0; i < length; i++) {\n      let key = keys[i];\n      if (hasOwnProperty.call(object, key)) {\n        return intents[key](object[key], callback);\n      }\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/objects/Intent.js\n// module id = 8\n// module chunks = 0","/* AUTOMATICALLY IMPORTED, DO NOT MODIFY */\n/*! (c) 2017 Andrea Giammarchi (ISC) */\n\n/**\n * This code is a revisited port of the snabbdom vDOM diffing logic,\n * the same that fuels as fork Vue.js or other libraries.\n * @credits https://github.com/snabbdom/snabbdom\n */\n\nconst eqeq = (a, b) => a == b;\n\nconst identity = O => O;\n\nconst remove = (get, parentNode, before, after) => {\n  if (after == null) {\n    parentNode.removeChild(get(before, -1));\n  } else {\n    const range = parentNode.ownerDocument.createRange();\n    range.setStartBefore(get(before, -1));\n    range.setEndAfter(get(after, -1));\n    range.deleteContents();\n  }\n};\n\nconst domdiff = (\n  parentNode,     // where changes happen\n  currentNodes,   // Array of current items/nodes\n  futureNodes,    // Array of future items/nodes\n  options         // optional object with one of the following properties\n                  //  before: domNode\n                  //  compare(generic, generic) => true if same generic\n                  //  node(generic) => Node\n) => {\n  if (!options)\n    options = {};\n  const compare = options.compare || eqeq;\n  const get = options.node || identity;\n  const before = options.before == null ? null : get(options.before, 0);\n  let currentStart = 0, futureStart = 0;\n  let currentEnd = currentNodes.length - 1;\n  let currentStartNode = currentNodes[0];\n  let currentEndNode = currentNodes[currentEnd];\n  let futureEnd = futureNodes.length - 1;\n  let futureStartNode = futureNodes[0];\n  let futureEndNode = futureNodes[futureEnd];\n  while (currentStart <= currentEnd && futureStart <= futureEnd) {\n    if (currentStartNode == null) {\n      currentStartNode = currentNodes[++currentStart];\n    }\n    else if (currentEndNode == null) {\n      currentEndNode = currentNodes[--currentEnd];\n    }\n    else if (futureStartNode == null) {\n      futureStartNode = futureNodes[++futureStart];\n    }\n    else if (futureEndNode == null) {\n      futureEndNode = futureNodes[--futureEnd];\n    }\n    else if (compare(currentStartNode, futureStartNode)) {\n      currentStartNode = currentNodes[++currentStart];\n      futureStartNode = futureNodes[++futureStart];\n    }\n    else if (compare(currentEndNode, futureEndNode)) {\n      currentEndNode = currentNodes[--currentEnd];\n      futureEndNode = futureNodes[--futureEnd];\n    }\n    else if (compare(currentStartNode, futureEndNode)) {\n      parentNode.insertBefore(\n        get(currentStartNode, 1),\n        get(currentEndNode, -0).nextSibling\n      );\n      currentStartNode = currentNodes[++currentStart];\n      futureEndNode = futureNodes[--futureEnd];\n    }\n    else if (compare(currentEndNode, futureStartNode)) {\n      parentNode.insertBefore(\n        get(currentEndNode, 1),\n        get(currentStartNode, 0)\n      );\n      currentEndNode = currentNodes[--currentEnd];\n      futureStartNode = futureNodes[++futureStart];\n    }\n    else {\n      let index = currentNodes.indexOf(futureStartNode);\n      if (index < 0) {\n        parentNode.insertBefore(\n          get(futureStartNode, 1),\n          get(currentStartNode, 0)\n        );\n        futureStartNode = futureNodes[++futureStart];\n      }\n      else {\n        let i = index;\n        let f = futureStart;\n        while (\n          i <= currentEnd &&\n          f <= futureEnd &&\n          currentNodes[i] === futureNodes[f]\n        ) {\n          i++;\n          f++;\n        }\n        if (1 < (i - index)) {\n          if (--index === currentStart) {\n            parentNode.removeChild(get(currentStartNode, -1));\n          } else {\n            remove(\n              get,\n              parentNode,\n              currentStartNode,\n              currentNodes[index]\n            );\n          }\n          currentStart = i;\n          futureStart = f;\n          currentStartNode = currentNodes[i];\n          futureStartNode = futureNodes[f];\n        } else {\n          const el = currentNodes[index];\n          currentNodes[index] = null;\n          parentNode.insertBefore(get(el, 1), get(currentStartNode, 0));\n          futureStartNode = futureNodes[++futureStart];\n        }\n      }\n    }\n  }\n  if (currentStart <= currentEnd || futureStart <= futureEnd) {\n    if (currentStart > currentEnd) {\n      const pin = futureNodes[futureEnd + 1];\n      const place = pin == null ? before : get(pin, 0);\n      if (futureStart === futureEnd) {\n        parentNode.insertBefore(get(futureNodes[futureStart], 1), place);\n      }\n      else {\n        const fragment = parentNode.ownerDocument.createDocumentFragment();\n        while (futureStart <= futureEnd) {\n          fragment.appendChild(get(futureNodes[futureStart++], 1));\n        }\n        parentNode.insertBefore(fragment, place);\n      }\n    }\n    else {\n      if (currentNodes[currentStart] == null)\n        currentStart++;\n      if (currentStart === currentEnd) {\n        parentNode.removeChild(get(currentNodes[currentStart], -1));\n      }\n      else {\n        remove(\n          get,\n          parentNode,\n          currentNodes[currentStart],\n          currentNodes[currentEnd]\n        );\n      }\n    }\n  }\n  return futureNodes;\n};\n\nexport default domdiff;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/shared/domdiff.js\n// module id = 9\n// module chunks = 0","// TODO:  I'd love to code-cover RegExp too here\n//        these are fundamental for this library\n\nconst spaces = ' \\\\f\\\\n\\\\r\\\\t';\nconst almostEverything = '[^ ' + spaces + '\\\\/>\"\\'=]+';\nconst attrName = '[ ' + spaces + ']+' + almostEverything;\nconst tagName = '<([A-Za-z]+[A-Za-z0-9:_-]*)((?:';\nconst attrPartials = '(?:=(?:\\'[^\\']*?\\'|\"[^\"]*?\"|<[^>]*?>|' + almostEverything + '))?)';\n\nconst attrSeeker = new RegExp(\n  tagName + attrName + attrPartials + '+)([ ' + spaces + ']*/?>)',\n  'g'\n);\n\nconst selfClosing = new RegExp(\n  tagName + attrName + attrPartials + '*)([ ' + spaces + ']*/>)',\n  'g'\n);\n\nexport {attrName, attrSeeker, selfClosing};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/shared/re.js\n// module id = 10\n// module chunks = 0","'use strict';\n\nimport './components/address-element';\nimport './components/buttons';\nimport './components/slider';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 11\n// module chunks = 0","/*! (c) Andrea Giammarchi (ISC) */var hyperHTML=function(e){\"use strict\";var t=document.defaultView,r=/^area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr$/i,l=\"ownerSVGElement\",c=\"http://www.w3.org/2000/svg\",s=\"connected\",f=\"dis\"+s,d=/^style|textarea$/i,b=\"_hyper: \"+(Math.random()*new Date|0)+\";\",h=\"\\x3c!--\"+b+\"--\\x3e\",v=t.Event;try{new v(\"Event\")}catch(e){v=function(e){var t=document.createEvent(\"Event\");return t.initEvent(e,!1,!1),t}}var n,i=t.Map||function(){var n=[],r=[];return{get:function(e){return r[n.indexOf(e)]},set:function(e,t){r[n.push(e)-1]=t}}},o=0,p=t.WeakMap||function(){var n=b+o++;return{get:function(e){return e[n]},set:function(e,t){Object.defineProperty(e,n,{configurable:!0,value:t})}}},a=t.WeakSet||function(){var t=new p;return{add:function(e){t.set(e,!0)},has:function(e){return!0===t.get(e)}}},m=Array.isArray||(n={}.toString,function(e){return\"[object Array]\"===n.call(e)}),g=b.trim||function(){return this.replace(/^\\s+|\\s+$/g,\"\")};function w(){return this}var u=function(e,t){var n=\"_\"+e+\"$\";return{get:function(){return this[n]||y(this,n,t.call(this,e))},set:function(e){y(this,n,e)}}},y=function(e,t,n){return Object.defineProperty(e,t,{configurable:!0,value:\"function\"==typeof n?function(){return e._wire$=n.apply(this,arguments)}:n})[t]},N={},x={},E=[],C=x.hasOwnProperty,j=0,A={attributes:N,define:function(e,t){e.indexOf(\"-\")<0?(e in x||(j=E.push(e)),x[e]=t):N[e]=t},invoke:function(e,t){for(var n=0;n<j;n++){var r=E[n];if(C.call(e,r))return x[r](e[r],t)}}},k=function(e,t){return T(e).createElement(t)},T=function(e){return e.ownerDocument||e},O=function(e){return T(e).createDocumentFragment()},S=function(e,t){return T(e).createTextNode(t)},L=\" \\\\f\\\\n\\\\r\\\\t\",M=\"[^ \"+L+\"\\\\/>\\\"'=]+\",$=\"[ \"+L+\"]+\"+M,D=\"<([A-Za-z]+[A-Za-z0-9:_-]*)((?:\",P=\"(?:=(?:'[^']*?'|\\\"[^\\\"]*?\\\"|<[^>]*?>|\"+M+\"))?)\",B=new RegExp(D+$+P+\"+)([ \"+L+\"]*/?>)\",\"g\"),R=new RegExp(D+$+P+\"*)([ \"+L+\"]*/>)\",\"g\"),_=O(document),H=\"append\"in _,z=\"content\"in k(document,\"template\");_.appendChild(S(_,\"g\")),_.appendChild(S(_,\"\"));var F=1===_.cloneNode(!0).childNodes.length,Z=\"importNode\"in document,I=H?function(e,t){e.append.apply(e,t)}:function(e,t){for(var n=t.length,r=0;r<n;r++)e.appendChild(t[r])},V=new RegExp(\"(\"+$+\"=)(['\\\"]?)\"+h+\"\\\\2\",\"gi\"),W=function(e,t,n,r){return\"<\"+t+n.replace(V,q)+r},q=function(e,t,n){return t+(n||'\"')+b+(n||'\"')},G=function(e,t){return(l in e?ee:Y)(e,t.replace(B,W))},J=F?function(e){for(var t=e.cloneNode(),n=e.childNodes||[],r=n.length,i=0;i<r;i++)t.appendChild(J(n[i]));return t}:function(e){return e.cloneNode(!0)},K=Z?function(e,t){return e.importNode(t,!0)}:function(e,t){return J(t)},Q=[].slice,U=function(e){return X(e)},X=function(e){if(e.propertyIsEnumerable(\"raw\")||/Firefox\\/(\\d+)/.test((t.navigator||{}).userAgent)&&parseFloat(RegExp.$1)<55){var n={};X=function(e){var t=\"^\"+e.join(\"^\");return n[t]||(n[t]=e)}}else X=function(e){return e};return X(e)},Y=z?function(e,t){var n=k(e,\"template\");return n.innerHTML=t,n.content}:function(e,t){var n=k(e,\"template\"),r=O(e);if(/^[^\\S]*?<(col(?:group)?|t(?:head|body|foot|r|d|h))/i.test(t)){var i=RegExp.$1;n.innerHTML=\"<table>\"+t+\"</table>\",I(r,Q.call(n.querySelectorAll(i)))}else n.innerHTML=t,I(r,Q.call(n.childNodes));return r},ee=z?function(e,t){var n=O(e),r=T(e).createElementNS(c,\"svg\");return r.innerHTML=t,I(n,Q.call(r.childNodes)),n}:function(e,t){var n=O(e),r=k(e,\"div\");return r.innerHTML='<svg xmlns=\"'+c+'\">'+t+\"</svg>\",I(n,Q.call(r.firstChild.childNodes)),n};function te(e){this.childNodes=e,this.length=e.length,this.first=e[0],this.last=e[this.length-1]}te.prototype.insert=function(){var e=O(this.first);return I(e,this.childNodes),e},te.prototype.remove=function(){var e=this.first,t=this.last;if(2===this.length)t.parentNode.removeChild(t);else{var n=T(e).createRange();n.setStartBefore(this.childNodes[1]),n.setEndAfter(t),n.deleteContents()}return e};var ne=function(e,t,n){e.unshift(e.indexOf.call(t.childNodes,n))},re=function(e,t,n){return{type:e,name:n,node:t,path:function(e){var t=[],n=void 0;switch(e.nodeType){case 1:case 11:n=e;break;case 8:n=e.parentNode,ne(t,n,e);break;default:n=e.ownerElement}for(e=n;n=n.parentNode;e=n)ne(t,n,e);return t}(t)}},ie=function(e,t){for(var n=t.length,r=0;r<n;r++)e=e.childNodes[t[r]];return e},oe=/acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i,ae=function(o,a){var u=void 0,l=void 0;return function(e){switch(typeof e){case\"object\":if(e){if(\"object\"===u){if(!a&&l!==e)for(var t in l)t in e||(o[t]=\"\")}else a?o.value=\"\":o.cssText=\"\";var n=a?{}:o;for(var r in e){var i=e[r];n[r]=\"number\"!=typeof i||oe.test(r)?i:i+\"px\"}u=\"object\",a?o.value=ce(l=n):l=e;break}default:l!=e&&(u=\"string\",l=e,a?o.value=e||\"\":o.cssText=e||\"\")}}},ue=/([^A-Z])([A-Z]+)/g,le=function(e,t,n){return t+\"-\"+n.toLowerCase()},ce=function(e){var t=[];for(var n in e)t.push(n.replace(ue,le),\":\",e[n],\";\");return t.join(\"\")},se=function(e,t){return e==t},fe=function(e){return e},de=function(e,t,n,r){if(null==r)t.removeChild(e(n,-1));else{var i=t.ownerDocument.createRange();i.setStartBefore(e(n,-1)),i.setEndAfter(e(r,-1)),i.deleteContents()}},he=function(e,t,n,r){r||(r={});for(var i=r.compare||se,o=r.node||fe,a=null==r.before?null:o(r.before,0),u=0,l=0,c=t.length-1,s=t[0],f=t[c],d=n.length-1,h=n[0],v=n[d];u<=c&&l<=d;)if(null==s)s=t[++u];else if(null==f)f=t[--c];else if(null==h)h=n[++l];else if(null==v)v=n[--d];else if(i(s,h))s=t[++u],h=n[++l];else if(i(f,v))f=t[--c],v=n[--d];else if(i(s,v))e.insertBefore(o(s,1),o(f,-0).nextSibling),s=t[++u],v=n[--d];else if(i(f,h))e.insertBefore(o(f,1),o(s,0)),f=t[--c],h=n[++l];else{var p=t.indexOf(h);if(p<0)e.insertBefore(o(h,1),o(s,0)),h=n[++l];else{for(var m=p,g=l;m<=c&&g<=d&&t[m]===n[g];)m++,g++;if(1<m-p)--p===u?e.removeChild(o(s,-1)):de(o,e,s,t[p]),l=g,s=t[u=m],h=n[g];else{var b=t[p];t[p]=null,e.insertBefore(o(b,1),o(s,0)),h=n[++l]}}}if(u<=c||l<=d)if(c<u){var w=n[d+1],y=null==w?a:o(w,0);if(l===d)e.insertBefore(o(n[l],1),y);else{for(var N=e.ownerDocument.createDocumentFragment();l<=d;)N.appendChild(o(n[l++],1));e.insertBefore(N,y)}}else null==t[u]&&u++,u===c?e.removeChild(o(t[u],-1)):de(o,e,t[u],t[c]);return n},ve=new a;function pe(){}pe.prototype=Object.create(null);var me=function(e){return{html:e}},ge=function e(t,n){return\"ELEMENT_NODE\"in t?t:t.constructor===te?1/n<0?n?t.remove():t.last:n?t.insert():t.first:e(t.render(),n)},be=function(e,t,n){for(var r=new pe,i=e.attributes,o=Q.call(i),a=[],u=o.length,l=0;l<u;l++){var c=o[l];if(c.value===b){var s=c.name;if(!(s in r)){var f=n.shift().replace(/^(?:|[\\S\\s]*?\\s)(\\S+?)=['\"]?$/,\"$1\");r[s]=i[f]||i[f.toLowerCase()],t.push(re(\"attr\",r[s],f))}a.push(c)}}for(var d=a.length,h=0;h<d;h++){var v=a[h];/^id$/i.test(v.name)?e.removeAttribute(v.name):e.removeAttributeNode(a[h])}var p=e.nodeName;if(/^script$/i.test(p)){for(var m=document.createElement(p),g=0;g<i.length;g++)m.setAttributeNode(i[g].cloneNode(!0));m.textContent=e.textContent,e.parentNode.replaceChild(m,e)}},we=function(e,t){t(e.placeholder),\"text\"in e?Promise.resolve(e.text).then(String).then(t):\"any\"in e?Promise.resolve(e.any).then(t):\"html\"in e?Promise.resolve(e.html).then(me).then(t):Promise.resolve(A.invoke(e,t)).then(t)},ye=function(e){return null!=e&&\"then\"in e},Ne=function(r,i){var o={node:ge,before:r},a=!1,u=void 0;return function e(t){switch(typeof t){case\"string\":case\"number\":case\"boolean\":a?u!==t&&(u=t,i[0].textContent=t):(a=!0,u=t,i=he(r.parentNode,i,[S(r,t)],o));break;case\"object\":case\"undefined\":if(null==t){a=!1,i=he(r.parentNode,i,[],o);break}default:if(a=!1,m(u=t))if(0===t.length)i.length&&(i=he(r.parentNode,i,[],o));else switch(typeof t[0]){case\"string\":case\"number\":case\"boolean\":e({html:t});break;case\"object\":if(m(t[0])&&(t=t.concat.apply([],t)),ye(t[0])){Promise.all(t).then(e);break}default:i=he(r.parentNode,i,t,o)}else\"ELEMENT_NODE\"in(n=t)||n instanceof te||n instanceof w?i=he(r.parentNode,i,11===t.nodeType?Q.call(t.childNodes):[t],o):ye(t)?t.then(e):\"placeholder\"in t?we(t,e):\"text\"in t?e(String(t.text)):\"any\"in t?e(t.any):\"html\"in t?i=he(r.parentNode,i,Q.call(G(r,[].concat(t.html).join(\"\")).childNodes),o):e(\"length\"in t?Q.call(t):A.invoke(t,e))}var n}},xe=function(t,n,e){var r=l in t,i=void 0;if(\"style\"===n)return function(e,t,n){if(n){var r=t.cloneNode(!0);return r.value=\"\",e.setAttributeNode(r),ae(r,n)}return ae(e.style,n)}(t,e,r);if(/^on/.test(n)){var o=n.slice(2);return o===s||o===f?(je&&(je=!1,function(){var i=function(e,t){for(var n=new v(t),r=e.length,i=0;i<r;i++){var o=e[i];1===o.nodeType&&a(o,n)}},a=function e(t,n){ve.has(t)&&t.dispatchEvent(n);for(var r=t.children||function(e){for(var t=[],n=e.childNodes,r=n.length,i=0;i<r;i++)1===n[i].nodeType&&t.push(n[i]);return t}(t),i=r.length,o=0;o<i;o++)e(r[o],n)};try{new MutationObserver(function(e){for(var t=e.length,n=0;n<t;n++){var r=e[n];i(r.removedNodes,f),i(r.addedNodes,s)}}).observe(document,{subtree:!0,childList:!0})}catch(e){document.addEventListener(\"DOMNodeRemoved\",function(e){i([e.target],f)},!1),document.addEventListener(\"DOMNodeInserted\",function(e){i([e.target],s)},!1)}}()),ve.add(t)):n.toLowerCase()in t&&(o=o.toLowerCase()),function(e){i!==e&&(i&&t.removeEventListener(o,i,!1),(i=e)&&t.addEventListener(o,e,!1))}}if(\"data\"===n||!r&&n in t)return function(e){i!==e&&(i=e,t[n]!==e&&null==(t[n]=e)&&t.removeAttribute(n))};if(n in A.attributes)return function(e){i=A.attributes[n](t,e),t.setAttribute(n,null==i?\"\":i)};var a=!1,u=e.cloneNode(!0);return function(e){i!==e&&(i=e,u.value!==e&&(null==e?(a&&(a=!1,t.removeAttributeNode(u)),u.value=e):(u.value=e,a||(a=!0,t.setAttributeNode(u)))))}},Ee=function(n){var r=void 0;return function e(t){r!==t&&(\"object\"==typeof(r=t)&&t?ye(t)?t.then(e):\"placeholder\"in t?we(t,e):e(\"text\"in t?String(t.text):\"any\"in t?t.any:\"html\"in t?[].concat(t.html).join(\"\"):\"length\"in t?Q.call(t).join(\"\"):A.invoke(t,e)):n.textContent=null==t?\"\":t)}},Ce={create:function(e,t){for(var n=[],r=t.length,i=0;i<r;i++){var o=t[i],a=ie(e,o.path);switch(o.type){case\"any\":n.push(Ne(a,[]));break;case\"attr\":n.push(xe(a,o.name,o.node));break;case\"text\":n.push(Ee(a)),a.textContent=\"\"}}return n},find:function e(t,n,r){for(var i=t.childNodes,o=i.length,a=0;a<o;a++){var u=i[a];switch(u.nodeType){case 1:be(u,n,r),e(u,n,r);break;case 8:u.textContent===b&&(r.shift(),n.push(d.test(t.nodeName)?re(\"text\",t):re(\"any\",u)));break;case 3:d.test(t.nodeName)&&g.call(u.textContent)===h&&(r.shift(),n.push(re(\"text\",t)))}}}},je=!0;var Ae=new p,ke=function(){try{var e=new p,t=Object.freeze([]);if(e.set(t,!0),!e.get(t))throw t;return e}catch(t){return new i}}();function Te(e){var t=Ae.get(this);return t&&t.template===U(e)?Oe.apply(t.updates,arguments):function(e){e=U(e);var t=ke.get(e)||function(e){var t=[],n=e.join(h).replace(De,Pe),r=G(this,n);Ce.find(r,t,e.slice());var i={fragment:r,paths:t};return ke.set(e,i),i}.call(this,e),n=K(this.ownerDocument,t.fragment),r=Ce.create(n,t.paths);Ae.set(this,{template:e,updates:r}),Oe.apply(r,arguments),this.textContent=\"\",this.appendChild(n)}.apply(this,arguments),this}function Oe(){for(var e=arguments.length,t=1;t<e;t++)this[t-1](arguments[t])}var Se,Le,Me,$e,De=R,Pe=function(e,t,n){return r.test(t)?e:\"<\"+t+n+\"></\"+t+\">\"},Be=new p,Re=function(n){var r=void 0,i=void 0,o=void 0,a=void 0,u=void 0;return function(e){e=U(e);var t=a!==e;return t&&(a=e,o=O(document),i=\"svg\"===n?document.createElementNS(c,\"svg\"):o,u=Te.bind(i)),u.apply(null,arguments),t&&(\"svg\"===n&&I(o,Q.call(i.childNodes)),r=He(o)),r}},_e=function(e,t){var n=t.indexOf(\":\"),r=Be.get(e),i=t;return-1<n&&(i=t.slice(n+1),t=t.slice(0,n)||\"html\"),r||Be.set(e,r={}),r[i]||(r[i]=Re(t))},He=function(e){for(var t=e.childNodes,n=t.length,r=[],i=0;i<n;i++){var o=t[i];1!==o.nodeType&&0===g.call(o.textContent).length||r.push(o)}return 1===r.length?r[0]:new te(r)},ze=A.define;function Fe(e){return arguments.length<2?null==e?Re(\"html\"):\"string\"==typeof e?Fe.wire(null,e):\"raw\"in e?Re(\"html\")(e):\"nodeType\"in e?Fe.bind(e):_e(e,\"html\"):(\"raw\"in e?Re(\"html\"):Fe.wire).apply(null,arguments)}return Fe.Component=w,Fe.bind=function(e){return Te.bind(e)},Fe.define=ze,Fe.diff=he,(Fe.hyper=Fe).wire=function(e,t){return null==e?Re(t||\"html\"):_e(e,t||\"html\")},Se=Re,Le=new p,Me=Object.create,$e=function(e,t){var n={w:null,p:null};return t.set(e,n),n},Object.defineProperties(w,{for:{configurable:!0,value:function(e,t){return function(e,t,n,r){var i,o,a,u=t.get(e)||$e(e,t);switch(typeof r){case\"object\":case\"function\":var l=u.w||(u.w=new p);return l.get(r)||(i=l,o=r,a=new e(n),i.set(o,a),a);default:var c=u.p||(u.p=Me(null));return c[r]||(c[r]=new e(n))}}(this,Le.get(e)||(n=e,r=new i,Le.set(n,r),r),e,null==t?\"default\":t);var n,r}}}),Object.defineProperties(w.prototype,{handleEvent:{value:function(e){var t=e.currentTarget;this[\"getAttribute\"in t&&t.getAttribute(\"data-call\")||\"on\"+e.type](e)}},html:u(\"html\",Se),svg:u(\"svg\",Se),state:u(\"state\",function(){return this.defaultState}),defaultState:{get:function(){return{}}},dispatch:{value:function(e,t){var n=this._wire$;if(n){var r=new CustomEvent(e,{bubbles:!0,cancelable:!0,detail:t});return r.component=this,(n.dispatchEvent?n:n.childNodes[0]).dispatchEvent(r)}return!1}},setState:{value:function(e,t){var n=this.state,r=\"function\"==typeof e?e.call(this,n):e;for(var i in r)n[i]=r[i];return!1!==t&&this.render(),this}}}),Fe}(window);\nexport default hyperHTML;\nexport const {Component, bind, define, diff, hyper, wire} = hyperHTML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm.js\n// module id = 12\n// module chunks = 0","import {ELEMENT_NODE, SVG_NAMESPACE} from '../shared/constants.js';\nimport {WeakMap, trim} from '../shared/poorlyfills.js';\nimport {fragment} from '../shared/easy-dom.js';\nimport {append, slice, unique} from '../shared/utils.js';\nimport Wire from '../classes/Wire.js';\nimport render from './render.js';\n\n// all wires used per each context\nconst wires = new WeakMap;\n\n// A wire is a callback used as tag function\n// to lazily relate a generic object to a template literal.\n// hyper.wire(user)`<div id=user>${user.name}</div>`; => the div#user\n// This provides the ability to have a unique DOM structure\n// related to a unique JS object through a reusable template literal.\n// A wire can specify a type, as svg or html, and also an id\n// via html:id or :id convention. Such :id allows same JS objects\n// to be associated to different DOM structures accordingly with\n// the used template literal without losing previously rendered parts.\nconst wire = (obj, type) => obj == null ?\n  content(type || 'html') :\n  weakly(obj, type || 'html');\n\n// A wire content is a virtual reference to one or more nodes.\n// It's represented by either a DOM node, or an Array.\n// In both cases, the wire content role is to simply update\n// all nodes through the list of related callbacks.\n// In few words, a wire content is like an invisible parent node\n// in charge of updating its content like a bound element would do.\nconst content = type => {\n  let wire, container, content, template, updates;\n  return function (statics) {\n    statics = unique(statics);\n    let setup = template !== statics;\n    if (setup) {\n      template = statics;\n      content = fragment(document);\n      container = type === 'svg' ?\n        document.createElementNS(SVG_NAMESPACE, 'svg') :\n        content;\n      updates = render.bind(container);\n    }\n    updates.apply(null, arguments);\n    if (setup) {\n      if (type === 'svg') {\n        append(content, slice.call(container.childNodes));\n      }\n      wire = wireContent(content);\n    }\n    return wire;\n  };\n};\n\n// wires are weakly created through objects.\n// Each object can have multiple wires associated\n// and this is thanks to the type + :id feature.\nconst weakly = (obj, type) => {\n  const i = type.indexOf(':');\n  let wire = wires.get(obj);\n  let id = type;\n  if (-1 < i) {\n    id = type.slice(i + 1);\n    type = type.slice(0, i) || 'html';\n  }\n  if (!wire) wires.set(obj, wire = {});\n  return wire[id] || (wire[id] = content(type));\n};\n\n// a document fragment loses its nodes as soon\n// as it's appended into another node.\n// This would easily lose wired content\n// so that on a second render call, the parent\n// node wouldn't know which node was there\n// associated to the interpolation.\n// To prevent hyperHTML to forget about wired nodes,\n// these are either returned as Array or, if there's ony one entry,\n// as single referenced node that won't disappear from the fragment.\n// The initial fragment, at this point, would be used as unique reference.\nconst wireContent = node => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  const wireNodes = [];\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    if (\n      child.nodeType === ELEMENT_NODE ||\n      trim.call(child.textContent).length !== 0\n    ) {\n      wireNodes.push(child);\n    }\n  }\n  return wireNodes.length === 1 ? wireNodes[0] : new Wire(wireNodes);\n};\n\nexport { content, weakly };\nexport default wire;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/hyper/wire.js\n// module id = 13\n// module chunks = 0","/*! (c) Andrea Giammarchi (ISC) */\n\nimport Component, {setup} from './classes/Component.js';\nimport Intent from './objects/Intent.js';\nimport wire, {content, weakly} from './hyper/wire.js';\nimport render from './hyper/render.js';\nimport diff from './shared/domdiff.js';\n\n// all functions are self bound to the right context\n// you can do the following\n// const {bind, wire} = hyperHTML;\n// and use them right away: bind(node)`hello!`;\nconst bind = context => render.bind(context);\nconst define = Intent.define;\n\nhyper.Component = Component;\nhyper.bind = bind;\nhyper.define = define;\nhyper.diff = diff;\nhyper.hyper = hyper;\nhyper.wire = wire;\n\n// the wire content is the lazy defined\n// html or svg property of each hyper.Component\nsetup(content);\n\n// everything is exported directly or through the\n// hyperHTML callback, when used as top level script\nexport {Component, bind, define, diff, hyper, wire};\n\n// by default, hyperHTML is a smart function\n// that \"magically\" understands what's the best\n// thing to do with passed arguments\nexport default function hyper(HTML) {\n  return arguments.length < 2 ?\n    (HTML == null ?\n      content('html') :\n      (typeof HTML === 'string' ?\n        hyper.wire(null, HTML) :\n        ('raw' in HTML ?\n          content('html')(HTML) :\n          ('nodeType' in HTML ?\n            hyper.bind(HTML) :\n            weakly(HTML, 'html')\n          )\n        )\n      )) :\n    ('raw' in HTML ?\n      content('html') : hyper.wire\n    ).apply(null, arguments);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/index.js\n// module id = 14\n// module chunks = 0","import {\n  COMMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n  ELEMENT_NODE\n} from '../shared/constants.js';\n\n// every template literal interpolation indicates\n// a precise target in the DOM the template is representing.\n// `<p id=${'attribute'}>some ${'content'}</p>`\n// hyperHTML finds only once per template literal,\n// hence once per entire application life-cycle,\n// all nodes that are related to interpolations.\n// These nodes are stored as indexes used to retrieve,\n// once per upgrade, nodes that will change on each future update.\n// A path example is [2, 0, 1] representing the operation:\n// node.childNodes[2].childNodes[0].childNodes[1]\n// Attributes are addressed via their owner node and their name.\nconst createPath = node => {\n  const path = [];\n  let parentNode;\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      parentNode = node;\n      break;\n    case COMMENT_NODE:\n      parentNode = node.parentNode;\n      prepend(path, parentNode, node);\n      break;\n    default:\n      parentNode = node.ownerElement;\n      break;\n  }\n  for (\n    node = parentNode;\n    (parentNode = parentNode.parentNode);\n    node = parentNode\n  ) {\n    prepend(path, parentNode, node);\n  }\n  return path;\n};\n\nconst prepend = (path, parent, node) => {\n  path.unshift(path.indexOf.call(parent.childNodes, node));\n};\n\nexport default {\n  create: (type, node, name) => ({type, name, node, path: createPath(node)}),\n  find: (node, path) => {\n    const length = path.length;\n    for (let i = 0; i < length; i++) {\n      node = node.childNodes[path[i]];\n    }\n    return node;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/objects/Path.js\n// module id = 15\n// module chunks = 0","// from https://github.com/developit/preact/blob/33fc697ac11762a1cb6e71e9847670d047af7ce5/src/constants.js\nconst IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n// style is handled as both string and object\n// even if the target is an SVG element (consistency)\nexport default (node, original, isSVG) => {\n  if (isSVG) {\n    const style = original.cloneNode(true);\n    style.value = '';\n    node.setAttributeNode(style);\n    return update(style, isSVG);\n  }\n  return update(node.style, isSVG);\n};\n\n// the update takes care or changing/replacing\n// only properties that are different or\n// in case of string, the whole node\nconst update = (style, isSVG) => {\n  let oldType, oldValue;\n  return newValue => {\n    switch (typeof newValue) {\n      case 'object':\n        if (newValue) {\n          if (oldType === 'object') {\n            if (!isSVG) {\n              if (oldValue !== newValue) {\n                for (const key in oldValue) {\n                  if (!(key in newValue)) {\n                    style[key] = '';\n                  }\n                }\n              }\n            }\n          } else {\n            if (isSVG) style.value = '';\n            else style.cssText = '';\n          }\n          const info = isSVG ? {} : style;\n          for (const key in newValue) {\n            const value = newValue[key];\n            info[key] = typeof value === 'number' &&\n                        !IS_NON_DIMENSIONAL.test(key) ?\n                          (value + 'px') : value;\n          }\n          oldType = 'object';\n          if (isSVG) style.value = toStyle((oldValue = info));\n          else oldValue = newValue;\n          break;\n        }\n      default:\n        if (oldValue != newValue) {\n          oldType = 'string';\n          oldValue = newValue;\n          if (isSVG) style.value = newValue || '';\n          else style.cssText = newValue || '';\n        }\n        break;\n    }\n  };\n};\n\nconst hyphen = /([^A-Z])([A-Z]+)/g;\nconst ized = ($0, $1, $2) => $1 + '-' + $2.toLowerCase();\nconst toStyle = object => {\n  const css = [];\n  for (const key in object) {\n    css.push(key.replace(hyphen, ized), ':', object[key], ';');\n  }\n  return css.join('');\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/objects/Style.js\n// module id = 16\n// module chunks = 0","import {\n  CONNECTED, DISCONNECTED,\n  COMMENT_NODE, DOCUMENT_FRAGMENT_NODE, ELEMENT_NODE, TEXT_NODE,\n  OWNER_SVG_ELEMENT,\n  SHOULD_USE_TEXT_CONTENT,\n  UID, UIDC\n} from '../shared/constants.js';\n\nimport Component from '../classes/Component.js';\nimport Wire from '../classes/Wire.js';\nimport Path from './Path.js';\nimport Style from './Style.js';\nimport Intent from './Intent.js';\nimport domdiff from '../shared/domdiff.js';\n// see /^script$/i.test(nodeName) bit down here\n// import { create as createElement, text } from '../shared/easy-dom.js';\nimport { text } from '../shared/easy-dom.js';\nimport { Event, WeakSet, isArray, trim } from '../shared/poorlyfills.js';\nimport { createFragment, getChildren, slice } from '../shared/utils.js';\n\n// hyper.Component have a connected/disconnected\n// mechanism provided by MutationObserver\n// This weak set is used to recognize components\n// as DOM node that needs to trigger connected/disconnected events\nconst components = new WeakSet;\n\n// a basic dictionary used to filter already cached attributes\n// while looking for special hyperHTML values.\nfunction Cache() {}\nCache.prototype = Object.create(null);\n\n// returns an intent to explicitly inject content as html\nconst asHTML = html => ({html});\n\n// returns nodes from wires and components\nconst asNode = (item, i) => {\n  return 'ELEMENT_NODE' in item ?\n    item :\n    (item.constructor === Wire ?\n      // in the Wire case, the content can be\n      // removed, post-pended, inserted, or pre-pended and\n      // all these cases are handled by domdiff already\n      /* istanbul ignore next */\n      ((1 / i) < 0 ?\n        (i ? item.remove() : item.last) :\n        (i ? item.insert() : item.first)) :\n      asNode(item.render(), i));\n}\n\n// returns true if domdiff can handle the value\nconst canDiff = value =>  'ELEMENT_NODE' in value ||\nvalue instanceof Wire ||\nvalue instanceof Component;\n\n// updates are created once per context upgrade\n// within the main render function (../hyper/render.js)\n// These are an Array of callbacks to invoke passing\n// each interpolation value.\n// Updates can be related to any kind of content,\n// attributes, or special text-only cases such <style>\n// elements or <textarea>\nconst create = (root, paths) => {\n  const updates = [];\n  const length = paths.length;\n  for (let i = 0; i < length; i++) {\n    const info = paths[i];\n    const node = Path.find(root, info.path);\n    switch (info.type) {\n      case 'any':\n        updates.push(setAnyContent(node, []));\n        break;\n      case 'attr':\n        updates.push(setAttribute(node, info.name, info.node));\n        break;\n      case 'text':\n        updates.push(setTextContent(node));\n        node.textContent = '';\n        break;\n    }\n  }\n  return updates;\n};\n\n// finding all paths is a one-off operation performed\n// when a new template literal is used.\n// The goal is to map all target nodes that will be\n// used to update content/attributes every time\n// the same template literal is used to create content.\n// The result is a list of paths related to the template\n// with all the necessary info to create updates as\n// list of callbacks that target directly affected nodes.\nconst find = (node, paths, parts) => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    switch (child.nodeType) {\n      case ELEMENT_NODE:\n        findAttributes(child, paths, parts);\n        find(child, paths, parts);\n        break;\n      case COMMENT_NODE:\n        if (child.textContent === UID) {\n          parts.shift();\n          paths.push(\n            // basicHTML or other non standard engines\n            // might end up having comments in nodes\n            // where they shouldn't, hence this check.\n            SHOULD_USE_TEXT_CONTENT.test(node.nodeName) ?\n              Path.create('text', node) :\n              Path.create('any', child)\n          );\n        }\n        break;\n      case TEXT_NODE:\n        // the following ignore is actually covered by browsers\n        // only basicHTML ends up on previous COMMENT_NODE case\n        // instead of TEXT_NODE because it knows nothing about\n        // special style or textarea behavior\n        /* istanbul ignore if */\n        if (\n          SHOULD_USE_TEXT_CONTENT.test(node.nodeName) &&\n          trim.call(child.textContent) === UIDC\n        ) {\n          parts.shift();\n          paths.push(Path.create('text', node));\n        }\n        break;\n    }\n  }\n};\n\n// attributes are searched via unique hyperHTML id value.\n// Despite HTML being case insensitive, hyperHTML is able\n// to recognize attributes by name in a caseSensitive way.\n// This plays well with Custom Elements definitions\n// and also with XML-like environments, without trusting\n// the resulting DOM but the template literal as the source of truth.\n// IE/Edge has a funny bug with attributes and these might be duplicated.\n// This is why there is a cache in charge of being sure no duplicated\n// attributes are ever considered in future updates.\nconst findAttributes = (node, paths, parts) => {\n  const cache = new Cache;\n  const attributes = node.attributes;\n  const array = slice.call(attributes);\n  const remove = [];\n  const length = array.length;\n  for (let i = 0; i < length; i++) {\n    const attribute = array[i];\n    if (attribute.value === UID) {\n      const name = attribute.name;\n      // the following ignore is covered by IE\n      // and the IE9 double viewBox test\n      /* istanbul ignore else */\n      if (!(name in cache)) {\n        const realName = parts.shift().replace(/^(?:|[\\S\\s]*?\\s)(\\S+?)=['\"]?$/, '$1');\n        cache[name] = attributes[realName] ||\n                      // the following ignore is covered by browsers\n                      // while basicHTML is already case-sensitive\n                      /* istanbul ignore next */\n                      attributes[realName.toLowerCase()];\n        paths.push(Path.create('attr', cache[name], realName));\n      }\n      remove.push(attribute);\n    }\n  }\n  const len = remove.length;\n  for (let i = 0; i < len; i++) {\n    // Edge HTML bug #16878726\n    const attribute = remove[i];\n    if (/^id$/i.test(attribute.name))\n      node.removeAttribute(attribute.name);\n    // standard browsers would work just fine here\n    else\n      node.removeAttributeNode(remove[i]);\n  }\n\n  // This is a very specific Firefox/Safari issue\n  // but since it should be a not so common pattern,\n  // it's probably worth patching regardless.\n  // Basically, scripts created through strings are death.\n  // You need to create fresh new scripts instead.\n  // TODO: is there any other node that needs such nonsense?\n  const nodeName = node.nodeName;\n  if (/^script$/i.test(nodeName)) {\n    // this used to be like that\n    // const script = createElement(node, nodeName);\n    // then Edge arrived and decided that scripts created\n    // through template documents aren't worth executing\n    // so it became this ... hopefully it won't hurt in the wild\n    const script = document.createElement(nodeName);\n    for (let i = 0; i < attributes.length; i++) {\n      script.setAttributeNode(attributes[i].cloneNode(true));\n    }\n    script.textContent = node.textContent;\n    node.parentNode.replaceChild(script, node);\n  }\n};\n\n// when a Promise is used as interpolation value\n// its result must be parsed once resolved.\n// This callback is in charge of understanding what to do\n// with a returned value once the promise is resolved.\nconst invokeAtDistance = (value, callback) => {\n  callback(value.placeholder);\n  if ('text' in value) {\n    Promise.resolve(value.text).then(String).then(callback);\n  } else if ('any' in value) {\n    Promise.resolve(value.any).then(callback);\n  } else if ('html' in value) {\n    Promise.resolve(value.html).then(asHTML).then(callback);\n  } else {\n    Promise.resolve(Intent.invoke(value, callback)).then(callback);\n  }\n};\n\n// quick and dirty way to check for Promise/ish values\nconst isPromise_ish = value => value != null && 'then' in value;\n\n// in a hyper(node)`<div>${content}</div>` case\n// everything could happen:\n//  * it's a JS primitive, stored as text\n//  * it's null or undefined, the node should be cleaned\n//  * it's a component, update the content by rendering it\n//  * it's a promise, update the content once resolved\n//  * it's an explicit intent, perform the desired operation\n//  * it's an Array, resolve all values if Promises and/or\n//    update the node with the resulting list of content\nconst setAnyContent = (node, childNodes) => {\n  const diffOptions = {node: asNode, before: node};\n  let fastPath = false;\n  let oldValue;\n  const anyContent = value => {\n    switch (typeof value) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n        if (fastPath) {\n          if (oldValue !== value) {\n            oldValue = value;\n            childNodes[0].textContent = value;\n          }\n        } else {\n          fastPath = true;\n          oldValue = value;\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            [text(node, value)],\n            diffOptions\n          );\n        }\n        break;\n      case 'object':\n      case 'undefined':\n        if (value == null) {\n          fastPath = false;\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            [],\n            diffOptions\n          );\n          break;\n        }\n      default:\n        fastPath = false;\n        oldValue = value;\n        if (isArray(value)) {\n          if (value.length === 0) {\n            if (childNodes.length) {\n              childNodes = domdiff(\n                node.parentNode,\n                childNodes,\n                [],\n                diffOptions\n              );\n            }\n          } else {\n            switch (typeof value[0]) {\n              case 'string':\n              case 'number':\n              case 'boolean':\n                anyContent({html: value});\n                break;\n              case 'object':\n                if (isArray(value[0])) {\n                  value = value.concat.apply([], value);\n                }\n                if (isPromise_ish(value[0])) {\n                  Promise.all(value).then(anyContent);\n                  break;\n                }\n              default:\n                childNodes = domdiff(\n                  node.parentNode,\n                  childNodes,\n                  value,\n                  diffOptions\n                );\n                break;\n            }\n          }\n        } else if (canDiff(value)) {\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            value.nodeType === DOCUMENT_FRAGMENT_NODE ?\n              slice.call(value.childNodes) :\n              [value],\n            diffOptions\n          );\n        } else if (isPromise_ish(value)) {\n          value.then(anyContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, anyContent);\n        } else if ('text' in value) {\n          anyContent(String(value.text));\n        } else if ('any' in value) {\n          anyContent(value.any);\n        } else if ('html' in value) {\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            slice.call(\n              createFragment(\n                node,\n                [].concat(value.html).join('')\n              ).childNodes\n            ),\n            diffOptions\n          );\n        } else if ('length' in value) {\n          anyContent(slice.call(value));\n        } else {\n          anyContent(Intent.invoke(value, anyContent));\n        }\n        break;\n    }\n  };\n  return anyContent;\n};\n\n// there are four kind of attributes, and related behavior:\n//  * events, with a name starting with `on`, to add/remove event listeners\n//  * special, with a name present in their inherited prototype, accessed directly\n//  * regular, accessed through get/setAttribute standard DOM methods\n//  * style, the only regular attribute that also accepts an object as value\n//    so that you can style=${{width: 120}}. In this case, the behavior has been\n//    fully inspired by Preact library and its simplicity.\nconst setAttribute = (node, name, original) => {\n  const isSVG = OWNER_SVG_ELEMENT in node;\n  let oldValue;\n  // if the attribute is the style one\n  // handle it differently from others\n  if (name === 'style') {\n    return Style(node, original, isSVG);\n  }\n  // the name is an event one,\n  // add/remove event listeners accordingly\n  else if (/^on/.test(name)) {\n    let type = name.slice(2);\n    if (type === CONNECTED || type === DISCONNECTED) {\n      if (notObserving) {\n        notObserving = false;\n        observe();\n      }\n      components.add(node);\n    }\n    else if (name.toLowerCase() in node) {\n      type = type.toLowerCase();\n    }\n    return newValue => {\n      if (oldValue !== newValue) {\n        if (oldValue) node.removeEventListener(type, oldValue, false);\n        oldValue = newValue;\n        if (newValue) node.addEventListener(type, newValue, false);\n      }\n    };\n  }\n  // the attribute is special ('value' in input)\n  // and it's not SVG *or* the name is exactly data,\n  // in this case assign the value directly\n  else if (name === 'data' || (!isSVG && name in node)) {\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (node[name] !== newValue) {\n          node[name] = newValue;\n          if (newValue == null) {\n            node.removeAttribute(name);\n          }\n        }\n      }\n    };\n  }\n  else if (name in Intent.attributes) {\n    return any => {\n      oldValue = Intent.attributes[name](node, any);\n      node.setAttribute(name, oldValue == null ? '' : oldValue);\n    };\n  }\n  // in every other case, use the attribute node as it is\n  // update only the value, set it as node only when/if needed\n  else {\n    let owner = false;\n    const attribute = original.cloneNode(true);\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (attribute.value !== newValue) {\n          if (newValue == null) {\n            if (owner) {\n              owner = false;\n              node.removeAttributeNode(attribute);\n            }\n            attribute.value = newValue;\n          } else {\n            attribute.value = newValue;\n            if (!owner) {\n              owner = true;\n              node.setAttributeNode(attribute);\n            }\n          }\n        }\n      }\n    };\n  }\n};\n\n// style or textareas don't accept HTML as content\n// it's pointless to transform or analyze anything\n// different from text there but it's worth checking\n// for possible defined intents.\nconst setTextContent = node => {\n  let oldValue;\n  const textContent = value => {\n    if (oldValue !== value) {\n      oldValue = value;\n      if (typeof value === 'object' && value) {\n        if (isPromise_ish(value)) {\n          value.then(textContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, textContent);\n        } else if ('text' in value) {\n          textContent(String(value.text));\n        } else if ('any' in value) {\n          textContent(value.any);\n        } else if ('html' in value) {\n          textContent([].concat(value.html).join(''));\n        } else if ('length' in value) {\n          textContent(slice.call(value).join(''));\n        } else {\n          textContent(Intent.invoke(value, textContent));\n        }\n      } else {\n        node.textContent = value == null ? '' : value;\n      }\n    }\n  };\n  return textContent;\n};\n\nexport default {create, find};\n\n// hyper.Components might need connected/disconnected notifications\n// used by components and their onconnect/ondisconnect callbacks.\n// When one of these callbacks is encountered,\n// the document starts being observed.\nlet notObserving = true;\nfunction observe() {\n\n  // when hyper.Component related DOM nodes\n  // are appended or removed from the live tree\n  // these might listen to connected/disconnected events\n  // This utility is in charge of finding all components\n  // involved in the DOM update/change and dispatch\n  // related information to them\n  const dispatchAll = (nodes, type) => {\n    const event = new Event(type);\n    const length = nodes.length;\n    for (let i = 0; i < length; i++) {\n      let node = nodes[i];\n      if (node.nodeType === ELEMENT_NODE) {\n        dispatchTarget(node, event);\n      }\n    }\n  };\n\n  // the way it's done is via the components weak set\n  // and recursively looking for nested components too\n  const dispatchTarget = (node, event) => {\n    if (components.has(node)) {\n      node.dispatchEvent(event);\n    }\n\n    /* istanbul ignore next */\n    const children = node.children || getChildren(node);\n    const length = children.length;\n    for (let i = 0; i < length; i++) {\n      dispatchTarget(children[i], event);\n    }\n  }\n\n  // The MutationObserver is the best way to implement that\n  // but there is a fallback to deprecated DOMNodeInserted/Removed\n  // so that even older browsers/engines can help components life-cycle\n  try {\n    (new MutationObserver(records => {\n      const length = records.length;\n      for (let i = 0; i < length; i++) {\n        let record = records[i];\n        dispatchAll(record.removedNodes, DISCONNECTED);\n        dispatchAll(record.addedNodes, CONNECTED);\n      }\n    })).observe(document, {subtree: true, childList: true});\n  } catch(o_O) {\n    document.addEventListener('DOMNodeRemoved', event => {\n      dispatchAll([event.target], DISCONNECTED);\n    }, false);\n    document.addEventListener('DOMNodeInserted', event => {\n      dispatchAll([event.target], CONNECTED);\n    }, false);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/objects/Updates.js\n// module id = 17\n// module chunks = 0","import {create, fragment, text} from './easy-dom.js';\n\nconst testFragment = fragment(document);\n\n// DOM4 node.append(...many)\nexport const hasAppend = 'append' in testFragment;\n\n// detect old browsers without HTMLTemplateElement content support\nexport const hasContent = 'content' in create(document, 'template');\n\n// IE 11 has problems with cloning templates: it \"forgets\" empty childNodes\ntestFragment.appendChild(text(testFragment, 'g'));\ntestFragment.appendChild(text(testFragment, ''));\nexport const hasDoomedCloneNode = testFragment.cloneNode(true).childNodes.length === 1;\n\n// old browsers need to fallback to cloneNode\n// Custom Elements V0 and V1 will work polyfilled\n// but native implementations need importNode instead\n// (specially Chromium and its old V0 implementation)\nexport const hasImportNode = 'importNode' in document;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hyperhtml/esm/shared/features-detection.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nimport HyperHTMLElement from 'hyperhtml-element';\n\nclass AddressElement extends HyperHTMLElement {\n\n    constructor() {\n        super();\n        this.attachShadow({mode: 'open'});\n        // const observer = new MutationObserver(changes => this.render());\n        // observer.observe(this, {childList: true});\n    }\n\n    static get observedAttributes() {\n        return ['address'];\n    }\n\n    get address() {\n        const value = this.getAttribute('address');\n        return value && JSON.parse(value);\n    }\n\n    set address(value) {\n        if (!value) {\n            this.removeAttribute('address');\n            this.setState({address: null});\n        }\n        else {\n            this.setAttribute('address', JSON.stringify(value));\n            this.setState({address: this.address});\n        }\n    }\n\n    attributeChangedCallback(name, prev, curr) {\n        this.render();\n    }\n\n    render() {\n        // when using without shadowDom and slot\n        // const customButtonElem = this.querySelectorAll(\"button\");\n        // return this.html`\n        //     Street: ${this.state.address.street}<br/>\n        //     City: ${this.state.address.city} <br/>\n        //     Custom button: ${customButtonElem}<br/>\n        //     End of things`;\n\n\n        return this.html`\n            Street: ${this.state.address.street}<br/>\n            City: ${this.state.address.city} <br/>\n            Custom button: <slot></slot><br/>\n            End of things`;\n    }\n\n    get defaultState() {\n        return {address: this.address || {}};\n    }\n}\n\nAddressElement.define('my-address');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/address-element.js\n// module id = 19\n// module chunks = 0","import hyperHTML from 'hyperhtml';\n\nclass Wrapper extends HTMLElement {\n    constructor() {\n        super();\n        this.hyper = hyperHTML(this);\n\n\n        this.buttons = [0, 1, 2, 3];\n        this.callbacks = [console.log, console.log, console.log, console.log];\n        this.render();\n    }\n\n    onClick(text) {\n        console.log(`Button says ${text}`)\n    }\n\n    render() {\n        const buttons = this.buttons.map(btn => {\n            const button = hyperHTML.wire({ btn })`<x-button text=\"Click me\" props=${this.getButtonPropsForIndex(btn)}></x-button>`;\n\n            return button;\n        });\n\n        this.hyper`${buttons}`;\n    }\n\n    getButtonPropsForIndex(i) {\n        return {\n            onButtonClick: this.callbacks[i],\n            messages: {\n                onClick: `Hello ${i}`\n            }\n        }\n    }\n}\n\n\n\nclass Button extends HTMLElement {\n\n    get props() {\n        return this._props;\n    }\n\n    set props(value) {\n        this._props = value;\n    }\n\n    constructor() {\n        super();\n        this.hyper = hyperHTML(this);\n        console.log(this.props);\n        console.log(this.getAttribute('text'));\n        this.hyper`<button onClick=\"${() => this.onClick()}\">${this.getAttribute('text')}</button>`;\n    }\n\n    onClick() {\n        this.props.onButtonClick(this.props.messages.onClick);\n    }\n}\n\n\n\n\ncustomElements.define('x-button', Button);\ncustomElements.define('x-wrapper', Wrapper);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/buttons.js\n// module id = 20\n// module chunks = 0","import HyperHTMLElement from 'hyperhtml-element';\n\n\nclass BioComponent extends HyperHTMLElement {\n\n    static get observedAttributes() {\n        return ['props'];\n    }\n\n    // todo: check if we have received props through an attribute. maybe in created or connected?\n    get props() {\n        return this._props;\n    }\n\n    // when setting \"props\" as a property, exepct an object\n    set props(value) {\n        this._props = value;\n        this.render(); // assume, that an element is already in the dom and we change its props -- then we need to re-render...\n        // when going through attributes, HyperHTMLElement automatically triggers render for us\n    }\n}\n\n\nclass Slide extends BioComponent {\n\n}\n\nSlide.define('x-slide');\n\nclass Slider extends BioComponent {\n    constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n\n        // re-render when children have changed. Note that childNodes is empty when connectedCallback is called\n        // note also, that created() is called when initial childNodes are available. so maybe only re-render\n        // on child note changes after created has been called\n        const observer = new MutationObserver(changes => this.render());\n        observer.observe(this, {childList: true});\n    }\n\n    attributeChangedCallback(name, prev, curr) {\n        this.render();\n    }\n\n    connectedCallback() {\n        this.render();\n    }\n\n    get defaultProps() {\n        return {selected: 0};\n    }\n\n    render() {\n        const slides = [...this.childNodes].filter((n) => n instanceof Slide);\n        const slidesCount = slides.length;\n        const props = this.props || this.defaultProps;\n\n        return this.html`\n            <div class=\"slides\">\n                <slot></slot>\n            </div>\n            <x-dots \n                props=${ {count: slidesCount, selected: props.selected} }\n                onselectSlide=${e => this.onSelectSlide(e)}></x-dots>\n        `;\n    }\n\n    onSelectSlide(e) {\n        this.props = {selected: e.detail};\n    }\n}\n\nSlider.define('x-slider');\n\nclass Dots extends BioComponent {\n\n    connectedCallback() {\n        this.render();\n    }\n\n    attributeChangedCallback(name, prev, curr) {\n        this.render();\n    }\n\n    render() {\n        const {selected} = this.props;\n        const dots = new Array(this.props.count).fill(1);\n\n        const dotElements = dots.map((_, idx) => selected === idx\n            ? BioComponent.wire()`<li onclick=${() => this.onSelected(idx)}><b>+</b></li>`\n            : BioComponent.wire()`<li onclick=${() => this.onSelected(idx)}>+</li>`);\n\n        this.html`\n            <ul>${dotElements}</ul>\n        `;\n    }\n\n    onSelected(index) {\n        const selectEvent = new CustomEvent('selectSlide', {\n            bubbles: true,\n            cancelable: true,\n            detail: index\n        });\n\n        this.dispatchEvent(selectEvent);\n    }\n}\n\nDots.define('x-dots');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/slider.js\n// module id = 21\n// module chunks = 0"],"sourceRoot":""}